#= require image_path

#= require app
#= require models/region-type-db
#= require models/indicator-db
#= require models/section-db
#= require models/region-store

$ = jQuery

models = window.CensusFile.models

region_types = new models.RegionTypeDb(<%= RegionType.order(:position).map{|rt| { name: rt.name, description: rt.name } }.to_json %>)
indicators = new models.IndicatorDb()
sections = new models.SectionDb(indicators)
region_store = new models.RegionStore(region_types)

window.CensusFile.globals = {
  defaults: {
    indicator_key: 'population-density',
    position: {
      latitude: 56.4,
      longitude: -94.9
      zoom: 3
    }
  }
  style: {
    stroke: '#ffffff',
    'stroke-width': '0.25%',
    opacity_faded: 0.4,
    opacity_full: 0.8,
  }
  hover_style: {
    stroke: '#000000',
    'stroke-width': '0.4%',
    # fill will be set to region's value
  }
  selected_style1: {
    stroke: '#000000',
    'stroke-width': '2%',
    pattern: image_path('pattern1.png'),
  }
  selected_style2: {
    stroke: '#ffffff',
    'stroke-width': '2%',
    pattern: image_path('pattern1.png'),
  }
  json_tile_url: <%= CensusFile::Application.config.tiles_url_pattern.to_json %>
  region_types: region_types
  indicators: indicators
  sections: sections
  region_store: region_store
  min_zoom: 3,
  max_zoom: 15
}
